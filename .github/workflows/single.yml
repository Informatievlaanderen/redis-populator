name: CD Single

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      environment:
        description: 'Environment'
        type: choice
        required: true
        default: 'tst'
        options: ['tst', 'stg', 'prd']
      service:
        description: 'Service'
        type: choice
        required: true
        default: 'municipality-cache'
        options: ['municipality-cache', 'streetname-cache', 'postal-cache', 'address-cache', 'building-cache', 'parcel-cache']

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    - name: CD
      env:
        BUILD_URL: ${{ vars.VBR_AWS_BUILD_API_DEVOPS }}/${{ github.event.inputs.service }}
        STATUS_URL: ${{ vars.VBR_AWS_BUILD_STATUS_API_DEVOPS }}/${{ github.event.inputs.service }}
      uses: informatievlaanderen/awscurl-polling-action/polling-action@main
      with:
          environment: ${{ github.event.inputs.environment }}
          version: ${{ github.event.inputs.version }}
          status-url: $STATUS_URL
          deploy-url: $BUILD_URL
          access-key: ${{ secrets.VBR_AWS_ACCESS_KEY_ID_DEVOPS }}
          secret-key: ${{ secrets.VBR_AWS_SECRET_ACCESS_KEY_DEVOPS }}
          deploy-target: 'ecs_scheduled_task'
          interval: 2
          domain: 'basisregisters'
          project: 'basisregisters'
    - name: output
      shell: bash
      run: |
        echo build-uuid: ${{ steps.awscurl-polling-action.outputs.build-uuid }}
        echo Status: ${{ steps.awscurl-polling-action.outputs.status }}
        echo ${{ steps.awscurl-polling-action.outputs.final-message }}